version: '3.8'

services:
  trading-info-backend:
    build: .
    container_name: trading-info-backend
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/trading_info
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

      # Redis configuration
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}

      # Telegram Bot configuration
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHANNEL_ID=${TELEGRAM_CHANNEL_ID}
      - TELEGRAM_ADMIN_IDS=${TELEGRAM_ADMIN_IDS}

      # JWT configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=86400000

      # Application configuration
      - SERVER_PORT=8080
      - UPLOAD_PATH=/app/uploads
      - SPRING_PROFILES_ACTIVE=production

      # JVM options
      - JAVA_OPTS=-Xmx512m -Xms256m

    volumes:
      - uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - trading-info-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: trading-info-postgres
    environment:
      - POSTGRES_DB=trading_info
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - trading-info-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trading_info"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: trading-info-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - trading-info-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  trading-info-network:
    driver: bridge