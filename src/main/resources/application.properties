# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Spring Application
spring.application.name=trading-info-backend

# Database Configuration (Local Development)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/trading_info}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
upload.path=uploads/

# Logging Configuration
logging.level.root=INFO
logging.level.com.tradinginfo=DEBUG
logging.file.name=logs/trading-info.log
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:3001,https://heart-trader.duckdns.org
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Telegram Configuration (for notifications)
telegram.bot.token=${TELEGRAM_BOT_TOKEN:8453388495:AAGcNlP0GuFLQH49Kh4xzR831SQC_o5LrQw}
telegram.channel.id=${TELEGRAM_CHANNEL_ID:@DailyTradiBlog}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# Development Mode
development.mode=false

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss